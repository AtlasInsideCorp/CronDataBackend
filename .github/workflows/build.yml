# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Crondata api deployment
on:
  push:
    branches:
      - '*'
      - '!main'
  workflow_dispatch:
    inputs:
      version:
        description: CronData Version
        default: v2.0.0
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
          cache: maven

      - name: Build with Maven
        run: |
          mvn -B -Pprod clean package --file pom.xml

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
          sudo apt-get update
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          docker login -u github -p ${{secrets.REGISTRY_KEY}} utmstack.azurecr.io

      - name: Build/Push Image
        env:
          IMAGE_NAME: crondata-backend
          IMAGE_TAG: testing
        run: |
          ls
          docker build -t utmstack.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker push utmstack.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
